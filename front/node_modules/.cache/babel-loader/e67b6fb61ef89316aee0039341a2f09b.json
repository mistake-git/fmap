{"ast":null,"code":"import MuiTextField from '@material-ui/core/TextField';\nimport MuiSwitch from '@material-ui/core/Switch';\nimport MuiCheckbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MuiSelect from '@material-ui/core/Select';\nimport { getIn } from 'formik';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport MuiRadioGroup from '@material-ui/core/RadioGroup';\nimport { createElement, useCallback } from 'react';\nimport MuiInputBase from '@material-ui/core/InputBase';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n}\n\nvar fieldToTextField = function (_a) {\n  var field = _a.field,\n      form = _a.form,\n      disabled = _a.disabled,\n      props = __rest(_a, [\"field\", \"form\", \"disabled\"]);\n\n  var name = field.name;\n  var touched = form.touched,\n      errors = form.errors,\n      isSubmitting = form.isSubmitting;\n  var fieldError = getIn(errors, name);\n  var showError = getIn(touched, name) && !!fieldError;\n  return __assign(__assign(__assign({}, props), field), {\n    error: showError,\n    helperText: showError ? fieldError : props.helperText,\n    disabled: disabled !== null && disabled !== void 0 ? disabled : isSubmitting\n  });\n};\n\nvar TextField = function (_a) {\n  var children = _a.children,\n      props = __rest(_a, [\"children\"]);\n\n  return createElement(MuiTextField, __assign({}, fieldToTextField(props)), children);\n};\n\nTextField.displayName = 'FormikMaterialUITextField';\n\nvar fieldToSwitch = function (_a) {\n  var field = _a.field,\n      isSubmitting = _a.form.isSubmitting,\n      disabled = _a.disabled,\n      props = __rest(_a, [\"field\", \"form\", \"disabled\"]);\n\n  return __assign(__assign(__assign({\n    disabled: disabled !== null && disabled !== void 0 ? disabled : isSubmitting\n  }, props), field), {\n    value: field.name,\n    checked: field.value\n  });\n};\n\nvar Switch = function (props) {\n  return createElement(MuiSwitch, __assign({}, fieldToSwitch(props)));\n};\n\nSwitch.displayName = 'FormikMaterialUISwitch';\n\nvar fieldToCheckbox = function (_a) {\n  var field = _a.field,\n      isSubmitting = _a.form.isSubmitting,\n      disabled = _a.disabled,\n      props = __rest(_a, [\"field\", \"form\", \"disabled\"]);\n\n  return __assign(__assign(__assign({\n    disabled: disabled !== null && disabled !== void 0 ? disabled : isSubmitting\n  }, props), field), {\n    checked: field.value,\n    value: field.value ? 'checked' : ''\n  });\n};\n\nvar Checkbox = function (props) {\n  return createElement(MuiCheckbox, __assign({}, fieldToCheckbox(props)));\n};\n\nCheckbox.displayName = 'FormikMaterialUICheckbox';\n\nvar CheckboxWithLabel = function (_a) {\n  var Label = _a.Label,\n      props = __rest(_a, [\"Label\"]);\n\n  return createElement(FormControlLabel, __assign({\n    control: createElement(MuiCheckbox, __assign({}, fieldToCheckbox(props)))\n  }, Label));\n};\n\nCheckboxWithLabel.displayName = 'FormikMaterialUICheckboxWithLabel';\n\nvar fieldToSelect = function (_a) {\n  var field = _a.field,\n      _b = _a.form,\n      isSubmitting = _b.isSubmitting,\n      setFieldValue = _b.setFieldValue,\n      disabled = _a.disabled,\n      props = __rest(_a, [\"field\", \"form\", \"disabled\"]);\n\n  var onChange = useCallback(function (event) {\n    if (props.multiple && props.native) {\n      var options = event.target.options;\n      var value = [];\n\n      for (var i = 0, l = options.length; i < l; i += 1) {\n        if (options[i].selected) {\n          value.push(options[i].value);\n        }\n      }\n\n      setFieldValue(field.name, value);\n    } else {\n      field.onChange(event);\n    }\n  }, [field.name, props.multiple, props.native]);\n  return __assign(__assign(__assign({\n    disabled: disabled !== null && disabled !== void 0 ? disabled : isSubmitting\n  }, props), field), {\n    onChange: onChange\n  });\n};\n\nvar Select = function (props) {\n  return createElement(MuiSelect, __assign({}, fieldToSelect(props)));\n};\n\nSelect.displayName = 'FormikMaterialUISelect';\n\nvar SimpleFileUpload = function (_a) {\n  var label = _a.label,\n      field = _a.field,\n      _b = _a.form,\n      touched = _b.touched,\n      errors = _b.errors,\n      isSubmitting = _b.isSubmitting,\n      setFieldValue = _b.setFieldValue,\n      _c = _a.disabled,\n      disabled = _c === void 0 ? false : _c,\n      inputProps = _a.InputProps,\n      inputLabelProps = _a.InputLabelProps;\n  var error = getIn(touched, field.name) && getIn(errors, field.name);\n  return createElement(\"div\", null, createElement(FormControl, null, label && createElement(InputLabel, __assign({\n    shrink: true,\n    error: !!error\n  }, inputLabelProps), label), createElement(Input, __assign({\n    error: !!error,\n    inputProps: {\n      type: 'file',\n      disabled: disabled || isSubmitting,\n      name: field.name,\n      onChange: function (event) {\n        var file = event.currentTarget.files[0];\n        setFieldValue(field.name, file);\n      }\n    }\n  }, inputProps)), error && createElement(FormHelperText, {\n    error: true\n  }, error)));\n};\n\nvar fieldToRadioGroup = function (_a) {\n  var field = _a.field,\n      form = _a.form,\n      props = __rest(_a, [\"field\", \"form\"]);\n\n  return __assign(__assign({}, props), field);\n};\n\nvar RadioGroup = function (props) {\n  return createElement(MuiRadioGroup, __assign({}, fieldToRadioGroup(props)));\n};\n\nRadioGroup.displayName = 'FormikMaterialUIRadioGroup';\n\nvar fieldToInputBase = function (_a) {\n  var field = _a.field,\n      isSubmitting = _a.form.isSubmitting,\n      disabled = _a.disabled,\n      props = __rest(_a, [\"field\", \"form\", \"disabled\"]);\n\n  return __assign(__assign({\n    disabled: disabled !== null && disabled !== void 0 ? disabled : isSubmitting\n  }, props), field);\n};\n\nvar InputBase = function (props) {\n  return createElement(MuiInputBase, __assign({}, fieldToInputBase(props)));\n};\n\nInputBase.displayName = 'FormikMaterialUIInputBase';\nexport { fieldToTextField, TextField, fieldToSwitch, Switch, fieldToCheckbox, Checkbox, CheckboxWithLabel, fieldToSelect, Select, SimpleFileUpload, fieldToRadioGroup, RadioGroup, fieldToInputBase, InputBase };","map":{"version":3,"sources":["../src/TextField.tsx","../src/Switch.tsx","../src/Checkbox.tsx","../src/CheckboxWithLabel.tsx","../src/Select.tsx","../src/SimpleFileUpload.tsx","../src/RadioGroup.tsx","../src/InputBase.tsx"],"names":["React.createElement","React.useCallback"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport MuiTextField, {\n  TextFieldProps as MuiTextFieldProps,\n} from '@material-ui/core/TextField';\nimport { FieldProps, getIn } from 'formik';\n\nexport type TextFieldProps = FieldProps &\n  Omit<MuiTextFieldProps, 'error' | 'name' | 'onChange' | 'value'> & {\n    // Fix for the type for variant which is using union\n    // https://stackoverflow.com/questions/55664421\n    variant: 'standard' | 'filled' | 'outlined' | undefined;\n  };\n\nexport const fieldToTextField = ({\n  field,\n  form,\n  disabled,\n  ...props\n}: TextFieldProps): MuiTextFieldProps => {\n  const { name } = field;\n  const { touched, errors, isSubmitting } = form;\n\n  const fieldError = getIn(errors, name);\n  const showError = getIn(touched, name) && !!fieldError;\n\n  return {\n    ...props,\n    ...field,\n    error: showError,\n    helperText: showError ? fieldError : props.helperText,\n    disabled: disabled ?? isSubmitting,\n  };\n};\n\nexport const TextField: React.ComponentType<TextFieldProps> = ({\n  children,\n  ...props\n}: TextFieldProps) => (\n  <MuiTextField {...fieldToTextField(props)}>{children}</MuiTextField>\n);\n\nTextField.displayName = 'FormikMaterialUITextField';\n","import * as React from 'react';\nimport MuiSwitch, {\n  SwitchProps as MuiSwitchProps,\n} from '@material-ui/core/Switch';\nimport { FieldProps } from 'formik';\n\nexport interface SwitchProps\n  extends FieldProps,\n    Omit<\n      MuiSwitchProps,\n      'form' | 'name' | 'onChange' | 'value' | 'defaultChecked'\n    > {}\n\nexport const fieldToSwitch = ({\n  field,\n  form: { isSubmitting },\n  disabled,\n  ...props\n}: SwitchProps): MuiSwitchProps => {\n  return {\n    disabled: disabled ?? isSubmitting,\n    ...props,\n    ...field,\n    value: field.name,\n    checked: field.value,\n  };\n};\n\nexport const Switch: React.ComponentType<SwitchProps> = (\n  props: SwitchProps\n) => <MuiSwitch {...fieldToSwitch(props)} />;\n\nSwitch.displayName = 'FormikMaterialUISwitch';\n","import * as React from 'react';\nimport MuiCheckbox, {\n  CheckboxProps as MuiCheckboxProps,\n} from '@material-ui/core/Checkbox';\nimport { FieldProps } from 'formik';\n\nexport interface CheckboxProps\n  extends FieldProps,\n    Omit<\n      MuiCheckboxProps,\n      'form' | 'checked' | 'defaultChecked' | 'name' | 'onChange' | 'value'\n    > {}\n\nexport const fieldToCheckbox = ({\n  field,\n  form: { isSubmitting },\n  disabled,\n  ...props\n}: CheckboxProps): MuiCheckboxProps => {\n  return {\n    disabled: disabled ?? isSubmitting,\n    ...props,\n    ...field,\n    // TODO handle indeterminate\n    checked: field.value,\n    value: field.value ? 'checked' : '',\n  };\n};\n\nexport const Checkbox: React.ComponentType<CheckboxProps> = (\n  props: CheckboxProps\n) => <MuiCheckbox {...fieldToCheckbox(props)} />;\n\nCheckbox.displayName = 'FormikMaterialUICheckbox';\n","import * as React from 'react';\nimport MuiCheckbox from '@material-ui/core/Checkbox';\nimport FormControlLabel, {\n  FormControlLabelProps as MuiFormControlLabelProps,\n} from '@material-ui/core/FormControlLabel';\n\nimport { CheckboxProps, fieldToCheckbox } from './Checkbox';\n\n/**\n * Exclude props that are passed directly to the control\n * https://github.com/mui-org/material-ui/blob/v3.1.1/packages/material-ui/src/FormControlLabel/FormControlLabel.js#L71\n */\nexport interface CheckboxWithLabelProps extends CheckboxProps {\n  Label: Omit<\n    MuiFormControlLabelProps,\n    'checked' | 'name' | 'onChange' | 'value' | 'inputRef'\n  >;\n}\n\nexport const CheckboxWithLabel: React.ComponentType<CheckboxWithLabelProps> = ({\n  Label,\n  ...props\n}) => (\n  <FormControlLabel\n    control={<MuiCheckbox {...fieldToCheckbox(props)} />}\n    {...Label}\n  />\n);\n\nCheckboxWithLabel.displayName = 'FormikMaterialUICheckboxWithLabel';\n","import * as React from 'react';\nimport MuiSelect, {\n  SelectProps as MuiSelectProps,\n} from '@material-ui/core/Select';\nimport { FieldProps } from 'formik';\n\nexport interface SelectProps\n  extends FieldProps,\n    Omit<MuiSelectProps, 'value'> {}\n\nexport const fieldToSelect = ({\n  field,\n  form: { isSubmitting, setFieldValue },\n  disabled,\n  ...props\n}: SelectProps): MuiSelectProps => {\n  const onChange = React.useCallback(\n    (event: React.ChangeEvent<{ value: unknown }>) => {\n      // Special case for multiple and native\n      if (props.multiple && props.native) {\n        const { options } = event.target as HTMLSelectElement;\n        const value: string[] = [];\n        for (let i = 0, l = options.length; i < l; i += 1) {\n          if (options[i].selected) {\n            value.push(options[i].value);\n          }\n        }\n\n        setFieldValue(field.name, value);\n      } else {\n        field.onChange(event);\n      }\n    },\n    [field.name, props.multiple, props.native]\n  );\n\n  return {\n    disabled: disabled ?? isSubmitting,\n    ...props,\n    ...field,\n    onChange,\n  };\n};\n\nexport const Select: React.ComponentType<SelectProps> = (\n  props: SelectProps\n) => <MuiSelect {...fieldToSelect(props)} />;\n\nSelect.displayName = 'FormikMaterialUISelect';\n","import * as React from 'react';\nimport { FieldProps, getIn } from 'formik';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel, { InputLabelProps } from '@material-ui/core/InputLabel';\nimport Input, { InputProps } from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nexport interface SimpleFileUploadProps extends FieldProps {\n  label: string;\n  disabled?: boolean;\n  InputProps?: Omit<InputProps, 'name' | 'type' | 'onChange'>;\n  InputLabelProps?: InputLabelProps;\n}\n\nexport const SimpleFileUpload = ({\n  label,\n  field,\n  form: { touched, errors, isSubmitting, setFieldValue },\n  disabled = false,\n  InputProps: inputProps,\n  InputLabelProps: inputLabelProps,\n}: SimpleFileUploadProps) => {\n  const error = getIn(touched, field.name) && getIn(errors, field.name);\n\n  return (\n    <div>\n      <FormControl>\n        {label && (\n          <InputLabel shrink error={!!error} {...inputLabelProps}>\n            {label}\n          </InputLabel>\n        )}\n        <Input\n          error={!!error}\n          inputProps={{\n            type: 'file',\n            disabled: disabled || isSubmitting,\n            name: field.name,\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onChange: (event: React.ChangeEvent<any>) => {\n              const file = event.currentTarget.files[0];\n              setFieldValue(field.name, file);\n            },\n          }}\n          {...inputProps}\n        />\n        {error && <FormHelperText error>{error}</FormHelperText>}\n      </FormControl>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport MuiRadioGroup, {\n  RadioGroupProps as MuiRadioGroupProps,\n} from '@material-ui/core/RadioGroup';\nimport { FieldProps } from 'formik';\n\nexport interface RadioGroupProps\n  extends Omit<MuiRadioGroupProps, 'name' | 'onChange' | 'value'>,\n    FieldProps {}\n\nexport const fieldToRadioGroup = ({\n  field,\n  // Exclude Form\n  form,\n  ...props\n}: RadioGroupProps): MuiRadioGroupProps => ({\n  ...props,\n  ...field,\n});\n\nexport const RadioGroup: React.ComponentType<RadioGroupProps> = (\n  props: RadioGroupProps\n) => {\n  return <MuiRadioGroup {...fieldToRadioGroup(props)} />;\n};\n\nRadioGroup.displayName = 'FormikMaterialUIRadioGroup';\n","import * as React from 'react';\nimport MuiInputBase, {\n  InputBaseProps as MuiInputBaseProps,\n} from '@material-ui/core/InputBase';\nimport { FieldProps } from 'formik';\n\nexport interface InputBaseProps\n  extends FieldProps,\n    Omit<MuiInputBaseProps, 'name' | 'onChange' | 'value'> {}\n\nexport const fieldToInputBase = ({\n  field,\n  form: { isSubmitting },\n  disabled,\n  ...props\n}: InputBaseProps): MuiInputBaseProps => {\n  return {\n    disabled: disabled ?? isSubmitting,\n    ...props,\n    ...field,\n  };\n};\n\nexport const InputBase: React.ComponentType<InputBaseProps> = (\n  props: InputBaseProps\n) => <MuiInputBase {...fieldToInputBase(props)} />;\n\nInputBase.displayName = 'FormikMaterialUIInputBase';\n"]},"metadata":{},"sourceType":"module"}