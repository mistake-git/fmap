{"ast":null,"code":"var _jsxFileName = \"/app/src/pages/Signup.tsx\";\nimport { Field, Form, Formik } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport React, { Fragment, useContext, useEffect } from \"react\";\nimport * as Yup from \"yup\";\nimport { Button, Container, FormControl, Grid, Link, Typography, LinearProgress } from \"@material-ui/core\";\nimport { AuthContext } from \"../Auth\";\nimport auth from \"../firebase\";\nexport const AuthSchema = Yup.object().shape({\n  email: Yup.string().email().required(),\n  password: Yup.string().min(6).required()\n});\n\nconst Signup = props => {\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    // if logged in, redirect to home\n    currentUser && props.history.push(\"/\");\n  }, [currentUser]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: AuthSchema,\n    onSubmit: async value => {\n      try {\n        await auth.createUserWithEmailAndPassword(value.email, value.password); // mail for e-mail address verification can be sent here by using sendSignInLinkToEmail()\n\n        props.history.push(\"/login\");\n      } catch (error) {\n        alert(error.message);\n      }\n    },\n    render: ({\n      submitForm,\n      isSubmitting,\n      isValid\n    }) => /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, isSubmitting && /*#__PURE__*/React.createElement(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 36\n      }\n    }), /*#__PURE__*/React.createElement(FormControl, {\n      margin: \"normal\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      style: {\n        marginTop: \"0.5em\",\n        marginBottom: \"0.5em\"\n      },\n      name: \"email\",\n      label: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\",\n      fullWidth: true,\n      variant: \"outlined\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      style: {\n        marginTop: \"0.5em\",\n        marginBottom: \"0.5em\"\n      },\n      name: \"password\",\n      label: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n      fullWidth: true,\n      variant: \"outlined\",\n      type: \"password\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: true,\n      onClick: submitForm,\n      style: {\n        marginTop: \"0.5em\",\n        marginBottom: \"0.5em\"\n      },\n      type: \"submit\",\n      disabled: !isValid || isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, \"\\u65B0\\u898F\\u767B\\u9332\"), /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      href: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 23\n      }\n    }, \"\\u30ED\\u30B0\\u30A4\\u30F3\")))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/app/src/pages/Signup.tsx"],"names":["Field","Form","Formik","TextField","React","Fragment","useContext","useEffect","Yup","Button","Container","FormControl","Grid","Link","Typography","LinearProgress","AuthContext","auth","AuthSchema","object","shape","email","string","required","password","min","Signup","props","currentUser","history","push","value","createUserWithEmailAndPassword","error","alert","message","submitForm","isSubmitting","isValid","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import { Field, Form, Formik } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport React, { Fragment, useContext, useEffect } from \"react\";\nimport * as Yup from \"yup\";\n\nimport {\n  Button,\n  Container,\n  FormControl,\n  Grid,\n  Link,\n  Typography,\n  LinearProgress\n} from \"@material-ui/core\";\n\nimport { AuthContext } from \"../Auth\";\nimport auth from \"../firebase\";\n\nexport const AuthSchema = Yup.object().shape({\n  email: Yup.string()\n    .email()\n    .required(),\n  password: Yup.string()\n    .min(6)\n    .required()\n});\n\nconst Signup = (props: any) => {\n  const { currentUser } = useContext(AuthContext);\n\n  useEffect(() => {\n    // if logged in, redirect to home\n    currentUser && props.history.push(\"/\");\n  }, [currentUser]);\n\n  return (\n    <Fragment>\n      <Container>\n        <Grid container>\n          <Grid item md={4}></Grid>\n          <Grid item md={4}>\n            <Formik\n              initialValues={{ email: \"\", password: \"\" }}\n              validationSchema={AuthSchema}\n              onSubmit={async value => {\n                try {\n                  await auth.createUserWithEmailAndPassword(\n                    value.email,\n                    value.password\n                  );\n                  // mail for e-mail address verification can be sent here by using sendSignInLinkToEmail()\n                  props.history.push(\"/login\");\n                } catch (error) {\n                  alert(error.message);\n                }\n              }}\n              render={({ submitForm, isSubmitting, isValid }) => (\n                <Form>\n                  {isSubmitting && <LinearProgress />}\n                  <FormControl margin=\"normal\" fullWidth>\n                    <Field\n                      style={{ marginTop: \"0.5em\", marginBottom: \"0.5em\" }}\n                      name=\"email\"\n                      label=\"メールアドレス\"\n                      fullWidth\n                      variant=\"outlined\"\n                      component={TextField}\n                    />\n                  </FormControl>\n                  <FormControl fullWidth>\n                    <Field\n                      style={{ marginTop: \"0.5em\", marginBottom: \"0.5em\" }}\n                      name=\"password\"\n                      label=\"パスワード\"\n                      fullWidth\n                      variant=\"outlined\"\n                      type=\"password\"\n                      component={TextField}\n                    />\n                  </FormControl>\n                  <FormControl fullWidth>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      fullWidth\n                      onClick={submitForm}\n                      style={{ marginTop: \"0.5em\", marginBottom: \"0.5em\" }}\n                      type=\"submit\"\n                      disabled={!isValid || isSubmitting}\n                    >\n                      新規登録\n                    </Button>\n                    <Typography align=\"center\">\n                      <Link href=\"/login\">ログイン</Link>\n                    </Typography>\n                  </FormControl>\n                </Form>\n              )}\n            />\n          </Grid>\n          <Grid item md={4}></Grid>\n        </Grid>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}